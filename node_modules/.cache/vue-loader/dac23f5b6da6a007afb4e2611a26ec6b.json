{"remainingRequest":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Microsoft VS Code\\Microsoft file\\demo2\\src\\components\\Home\\scroll\\Subassembly.vue?vue&type=template&id=5b6edef4&","dependencies":[{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\src\\components\\Home\\scroll\\Subassembly.vue","mtime":1548751829234},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"span\", [_vm._v(\"子组件subdmok: \" + _vm._s(_vm.subdmok))]),\n    _c(\"br\"),\n    _c(\"span\", [_vm._v(\"子组件subdoms: \" + _vm._s(_vm.subdoms))]),\n    _c(\"br\"),\n    _c(\"span\", [_vm._v(\"子组件给父组件\")]),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.subdoms,\n          expression: \"subdoms\"\n        }\n      ],\n      attrs: { type: \"text\" },\n      domProps: { value: _vm.subdoms },\n      on: {\n        change: _vm.childClick,\n        input: function($event) {\n          if ($event.target.composing) {\n            return\n          }\n          _vm.subdoms = $event.target.value\n        }\n      }\n    }),\n    _c(\"br\"),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.test,\n          expression: \"test\"\n        }\n      ],\n      ref: \"test\",\n      attrs: { type: \"checkbox\" },\n      domProps: {\n        checked: Array.isArray(_vm.test)\n          ? _vm._i(_vm.test, null) > -1\n          : _vm.test\n      },\n      on: {\n        click: _vm.testCheckbox,\n        change: function($event) {\n          var $$a = _vm.test,\n            $$el = $event.target,\n            $$c = $$el.checked ? true : false\n          if (Array.isArray($$a)) {\n            var $$v = null,\n              $$i = _vm._i($$a, $$v)\n            if ($$el.checked) {\n              $$i < 0 && (_vm.test = $$a.concat([$$v]))\n            } else {\n              $$i > -1 &&\n                (_vm.test = $$a.slice(0, $$i).concat($$a.slice($$i + 1)))\n            }\n          } else {\n            _vm.test = $$c\n          }\n        }\n      }\n    }),\n    _vm._v(\"\\n  \" + _vm._s(_vm.test) + \"\\n  \"),\n    _c(\"br\"),\n    _c(\"input\", {\n      attrs: { type: \"checkbox\", model: _vm.sth },\n      on: {\n        input: function($event) {\n          _vm.sth = $event.target.value\n        }\n      }\n    }),\n    _vm._v(\"\\n  \" + _vm._s(_vm.sth) + \"\\n  \"),\n    _c(\"br\")\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}