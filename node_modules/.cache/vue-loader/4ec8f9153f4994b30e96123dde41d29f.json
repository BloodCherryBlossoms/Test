{"remainingRequest":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Microsoft VS Code\\Microsoft file\\demo2\\src\\components\\Home\\scroll2\\tree2.vue?vue&type=style&index=0&id=785bccca&lang=scss&scoped=true&","dependencies":[{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\src\\components\\Home\\scroll2\\tree2.vue","mtime":1547456368749},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\sass-loader\\lib\\loader.js","mtime":1545104418467},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n/* .treeMoudel{\r\n    li{\r\n        .itemTree{\r\n            width: 100%;\r\n            padding-left:30px;\r\n            position: relative;\r\n            &:hover{\r\n                background:#2B9EEE;\r\n                color:#fff;\r\n            }\r\n            .selectBox{\r\n                display: inline-block;\r\n                width: 16px;\r\n                height:16px;\r\n                border:1px solid #ccc;\r\n                border-radius: 3px;\r\n                position: relative;\r\n                background: #fff;\r\n                top:2px;\r\n                .checkName{\r\n                    position: absolute;\r\n                    top:-16px;\r\n                    left:0px;\r\n                    color:#333;\r\n                }\r\n                .checkUsername{\r\n                    position: absolute;\r\n                    top:-12px;\r\n                    left:0px;\r\n                    color:#333;\r\n                }\r\n            }\r\n            span{\r\n                display: inline-block;\r\n                position: absolute;\r\n                font-size:14px;\r\n            }\r\n            .topSpan{\r\n                font-size:16px;\r\n            }\r\n            .noTopSpan{\r\n                font-size:14px;\r\n            }\r\n        }\r\n        .topNode{\r\n            height:55px;\r\n            line-height: 55px;\r\n            font-size:16px;\r\n            cursor: pointer;\r\n        }\r\n        .active{\r\n            background:#2B9EEE;\r\n            color:#fff;\r\n        }\r\n        .noTopNode{\r\n            height:45px;\r\n            line-height:45px;\r\n            &:hover{\r\n                background:#2B9EEE;\r\n                cursor: pointer;\r\n                color:#fff;\r\n            }\r\n        }\r\n    }\r\n} */\r\n",{"version":3,"sources":["tree2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tree2.vue","sourceRoot":"src\\components\\Home\\scroll2","sourcesContent":["<template>\r\n     <ul class = \"treeMoudel\">\r\n        <li v-for = \"(item,index) in menus\" :key = \"index\">\r\n            <!-- 遍历menus，如果传过来的depth等于0，就添加topNode的class，如果不等于0，就添加noTopNode的class -->\r\n            <div :class = \"{'itemTree':true,'topNode':depth == 0,'noTopNode':depth != 0,'active':actId == item.id}\">\r\n                <!-- 判断如果含有name字段就显示name字段 -->\r\n                <span :style = \"transform\" v-if = \"item.name\" :class = \"{'topSpan':depth == 0,'noTopSpan':depth != 0}\">\r\n                    <!-- 如果item有孩子且item.show为false,那么图标为折叠图标 -->\r\n                    <i class = \"el-icon-caret-right\" v-if = \"item.userList && item.userList.length > 0 && !item.show\" @click = \"selectItem(item)\"></i>\r\n                    <!-- 如果item有孩子且item.show为true,那么图标为展开图标 -->\r\n                    <i class = \"el-icon-caret-bottom\" v-if = \"item.userList && item.userList.length > 0 && item.show\" @click = \"selectItem(item)\"></i>\r\n                    <i class = \"selectBox\" @click = \"checkItem(item)\">\r\n                        <!-- 如果item的selectArr.length是大于0的，也就是里面有值的话就是勾选状态，否则就是不勾选状态 -->\r\n                        <i :class = \"{'checkName iconfont':true, 'gouxuan5':item.selectArr.length > 0}\" ></i>\r\n                    </i>\r\n                    {{item.name}}\r\n                </span>\r\n                <!-- 判断如果含有username字段就显示username字段 -->\r\n                <span :style = \"transform\" v-if = \"item.username\" :class = \"{'topSpan':depth == 0,'noTopSpan':depth != 0}\">\r\n                    <!-- 如果item有孩子且item.show为false,那么图标为折叠图标 -->\r\n                    <i class = \"el-icon-caret-right\" v-if = \"item.userList && item.userList.length > 0 && !item.show\" @click = \"selectItem(item)\"></i>\r\n                    <!-- 如果item有孩子且item.show为true,那么图标为展开图标 -->\r\n                    <i class = \"el-icon-caret-bottom\" v-if = \"item.userList && item.userList.length > 0 && item.show\" @click = \"selectItem(item)\"></i>\r\n                    <i class = \"selectBox\" @click = \"checkItem(item)\">\r\n                        <!-- 如果item的selectArr.length是大于0的，也就是里面有值的话就是勾选状态，否则就是不勾选状态 -->\r\n                        <i :class = \"{'checkUsername iconfont':true, 'gouxuan5':item.selectArr.length > 0}\"></i>\r\n                    </i>\r\n                    {{item.username}}\r\n                </span>\r\n            </div>\r\n            <div>\r\n                <!-- 递归组件就是自己调用自己，这里是在自己的组件内再次调用自己，但是务必要和pages中的tree页面中使用的一模一样才可以，否则树不会生效 -->\r\n                <Tree v-if = \"item.userList && item.userList.length > 0 && item.show\" :menus = \"item.userList\" :depth = \"depth+4\" @selectItem = \"selectItem\" :actId = \"actId\" @checkItem = \"checkItem\"></Tree>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'Tree',\r\n    props: ['menus', 'depth', 'actId'],\r\n    data () {\r\n        return {\r\n            msg: '这是二级菜单树'\r\n        }\r\n    },\r\n    methods: {\r\n        // 将selectItem方法暴露出去\r\n        selectItem(item) {\r\n            this.$emit('selectItem', item);\r\n        },\r\n        // 将checkItem方法暴露出去\r\n        checkItem(item) {\r\n            this.$emit('checkItem', item);\r\n        }\r\n    },\r\n    computed: {\r\n        //通过传过来的depth计算下级目录的偏移量，这里我用的transform\r\n        transform () {\r\n            return 'transform:translateX(' + this.depth * 10 + 'px)';\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style  lang = \"scss\" scoped>\r\n/* .treeMoudel{\r\n    li{\r\n        .itemTree{\r\n            width: 100%;\r\n            padding-left:30px;\r\n            position: relative;\r\n            &:hover{\r\n                background:#2B9EEE;\r\n                color:#fff;\r\n            }\r\n            .selectBox{\r\n                display: inline-block;\r\n                width: 16px;\r\n                height:16px;\r\n                border:1px solid #ccc;\r\n                border-radius: 3px;\r\n                position: relative;\r\n                background: #fff;\r\n                top:2px;\r\n                .checkName{\r\n                    position: absolute;\r\n                    top:-16px;\r\n                    left:0px;\r\n                    color:#333;\r\n                }\r\n                .checkUsername{\r\n                    position: absolute;\r\n                    top:-12px;\r\n                    left:0px;\r\n                    color:#333;\r\n                }\r\n            }\r\n            span{\r\n                display: inline-block;\r\n                position: absolute;\r\n                font-size:14px;\r\n            }\r\n            .topSpan{\r\n                font-size:16px;\r\n            }\r\n            .noTopSpan{\r\n                font-size:14px;\r\n            }\r\n        }\r\n        .topNode{\r\n            height:55px;\r\n            line-height: 55px;\r\n            font-size:16px;\r\n            cursor: pointer;\r\n        }\r\n        .active{\r\n            background:#2B9EEE;\r\n            color:#fff;\r\n        }\r\n        .noTopNode{\r\n            height:45px;\r\n            line-height:45px;\r\n            &:hover{\r\n                background:#2B9EEE;\r\n                cursor: pointer;\r\n                color:#fff;\r\n            }\r\n        }\r\n    }\r\n} */\r\n</style>\r\n"]}]}