{"remainingRequest":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Microsoft VS Code\\Microsoft file\\demo2\\src\\components\\Home\\scroll\\text.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\src\\components\\Home\\scroll\\text.vue","mtime":1550822379727},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  props: ['submenu', 'submenuChecked'],\r\n  data: function () {\r\n     return {\r\n       data: this.submenu,\r\n       open: true,\r\n       checked: false,\r\n       selectArrs: []\r\n     }\r\n  },\r\n  components: {\r\n    // checkboxs\r\n  },\r\n  beforeCreate () {\r\n    this.$options.components.checkboxs = require('./checkboxs2.vue').default\r\n    // this.$options.components.TreeFolderContents = () => import('')\r\n  },\r\n  mounted() {\r\n    console.log(this.checkeds)\r\n    this.getTree();\r\n  },\r\n  methods: {\r\n    getTree() {\r\n      console.log()\r\n    },\r\n    //展开动作\r\n    toggle: function () {\r\n      console.log(this.isFolder)\r\n      if (this.isFolder) {\r\n        this.open = !this.open\r\n      }\r\n    },\r\n    checkAll: function () {\r\n      let isd = this.isdata\r\n      console.log(isd)\r\n      var _this = this\r\n      console.log(_this.checked)\r\n      console.log(_this.selectArrs)\r\n      this.$nextTick(function(){\r\n        console.log(_this.checked)\r\n      })\r\n      if (_this.checked) {\r\n        _this.selectArrs = []\r\n      } else {\r\n        _this.selectArrs = []\r\n        let list\r\n        if (isd !== undefined) {\r\n          list = isd.list\r\n        }\r\n        console.log(list)\r\n        if (!list) {\r\n          return\r\n        }\r\n        list.forEach((item) => {\r\n          _this.selectArrs.push(item.id)\r\n        })\r\n      }\r\n    },\r\n    selectArrsK: function(val) {\r\n      this.selectArrs = val\r\n    }\r\n  },\r\n  computed: {\r\n    isFolder: function () {\r\n      return this.data.list &&\r\n        this.data.list.length\r\n    },\r\n    isdata: function () {\r\n      return this.data\r\n    }\r\n  },\r\n  watch: {\r\n    'selectArrs': {\r\n      handler(val){\r\n        let isd = this.isdata\r\n        let list = isd.list\r\n        console.log(val)\r\n        if (!list) {\r\n          return\r\n        }\r\n        if (val.length === list.length) {\r\n          this.checked = true\r\n        } else {\r\n          this.checked = false\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["text.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"text.vue","sourceRoot":"src\\components\\Home\\scroll","sourcesContent":["<template>\r\n  <div>\r\n      <input type=\"checkbox\" :value=\"submenu.id\" v-model=\"checked\" @click=\"checkAll\">\r\n      <label :class=\"{bold: isFolder}\" @click=\"toggle\">\r\n        <label>{{submenu.name}}</label>\r\n        <span v-if=\"isFolder\">[{{ open ? '-' : '+' }}]</span>\r\n      </label>\r\n        <checkboxs v-show=\"open\" v-if=\"isFolder\" :children=\"submenu.list\" :childrenChecked=\"selectArrs\" @selectArrsK=\"selectArrsK\"></checkboxs>\r\n      {{selectArrs}}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['submenu', 'submenuChecked'],\r\n  data: function () {\r\n     return {\r\n       data: this.submenu,\r\n       open: true,\r\n       checked: false,\r\n       selectArrs: []\r\n     }\r\n  },\r\n  components: {\r\n    // checkboxs\r\n  },\r\n  beforeCreate () {\r\n    this.$options.components.checkboxs = require('./checkboxs2.vue').default\r\n    // this.$options.components.TreeFolderContents = () => import('')\r\n  },\r\n  mounted() {\r\n    console.log(this.checkeds)\r\n    this.getTree();\r\n  },\r\n  methods: {\r\n    getTree() {\r\n      console.log()\r\n    },\r\n    //展开动作\r\n    toggle: function () {\r\n      console.log(this.isFolder)\r\n      if (this.isFolder) {\r\n        this.open = !this.open\r\n      }\r\n    },\r\n    checkAll: function () {\r\n      let isd = this.isdata\r\n      console.log(isd)\r\n      var _this = this\r\n      console.log(_this.checked)\r\n      console.log(_this.selectArrs)\r\n      this.$nextTick(function(){\r\n        console.log(_this.checked)\r\n      })\r\n      if (_this.checked) {\r\n        _this.selectArrs = []\r\n      } else {\r\n        _this.selectArrs = []\r\n        let list\r\n        if (isd !== undefined) {\r\n          list = isd.list\r\n        }\r\n        console.log(list)\r\n        if (!list) {\r\n          return\r\n        }\r\n        list.forEach((item) => {\r\n          _this.selectArrs.push(item.id)\r\n        })\r\n      }\r\n    },\r\n    selectArrsK: function(val) {\r\n      this.selectArrs = val\r\n    }\r\n  },\r\n  computed: {\r\n    isFolder: function () {\r\n      return this.data.list &&\r\n        this.data.list.length\r\n    },\r\n    isdata: function () {\r\n      return this.data\r\n    }\r\n  },\r\n  watch: {\r\n    'selectArrs': {\r\n      handler(val){\r\n        let isd = this.isdata\r\n        let list = isd.list\r\n        console.log(val)\r\n        if (!list) {\r\n          return\r\n        }\r\n        if (val.length === list.length) {\r\n          this.checked = true\r\n        } else {\r\n          this.checked = false\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n</style>\r\n"]}]}