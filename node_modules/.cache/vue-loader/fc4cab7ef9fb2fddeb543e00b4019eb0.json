{"remainingRequest":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Microsoft VS Code\\Microsoft file\\demo2\\src\\components\\Home\\scroll2\\tree2.vue?vue&type=custom&index=0&blockType=ul&class=treeMoudel","dependencies":[{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\src\\components\\Home\\scroll2\\tree2.vue","mtime":1547456172342},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Microsoft VS Code\\Microsoft file\\demo2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<li v-for = \"(item,index) in menus\" :key = \"index\">\n    <!-- 遍历menus，如果传过来的depth等于0，就添加topNode的class，如果不等于0，就添加noTopNode的class -->\n    <div :class = \"{'itemTree':true,'topNode':depth == 0,'noTopNode':depth != 0,'active':actId == item.id}\">\n        <!-- 判断如果含有name字段就显示name字段 -->\n        <span :style = \"transform\" v-if = \"item.name\" :class = \"{'topSpan':depth == 0,'noTopSpan':depth != 0}\">\n            <!-- 如果item有孩子且item.show为false,那么图标为折叠图标 -->\n            <i class = \"el-icon-caret-right\" v-if = \"item.userList && item.userList.length > 0 && !item.show\" @click = \"selectItem(item)\"></i>\n            <!-- 如果item有孩子且item.show为true,那么图标为展开图标 -->\n            <i class = \"el-icon-caret-bottom\" v-if = \"item.userList && item.userList.length > 0 && item.show\" @click = \"selectItem(item)\"></i>\n            <i class = \"selectBox\" @click = \"checkItem(item)\">\n                <!-- 如果item的selectArr.length是大于0的，也就是里面有值的话就是勾选状态，否则就是不勾选状态 -->\n                <i :class = \"{'checkName iconfont':true, 'gouxuan5':item.selectArr.length > 0}\" ></i>\n            </i>\n            {{item.name}}\n        </span>\n        <!-- 判断如果含有username字段就显示username字段 -->\n        <span :style = \"transform\" v-if = \"item.username\" :class = \"{'topSpan':depth == 0,'noTopSpan':depth != 0}\">\n            <!-- 如果item有孩子且item.show为false,那么图标为折叠图标 -->\n            <i class = \"el-icon-caret-right\" v-if = \"item.userList && item.userList.length > 0 && !item.show\" @click = \"selectItem(item)\"></i>\n            <!-- 如果item有孩子且item.show为true,那么图标为展开图标 -->\n            <i class = \"el-icon-caret-bottom\" v-if = \"item.userList && item.userList.length > 0 && item.show\" @click = \"selectItem(item)\"></i>\n            <i class = \"selectBox\" @click = \"checkItem(item)\">\n                <!-- 如果item的selectArr.length是大于0的，也就是里面有值的话就是勾选状态，否则就是不勾选状态 -->\n                <i :class = \"{'checkUsername iconfont':true, 'gouxuan5':item.selectArr.length > 0}\"></i>\n            </i>\n            {{item.username}}\n        </span>\n    </div>\n    <el-collapse-transition>\n        <!-- 递归组件就是自己调用自己，这里是在自己的组件内再次调用自己，但是务必要和pages中的tree页面中使用的一模一样才可以，否则树不会生效 -->\n        <Tree v-if = \"item.userList && item.userList.length > 0 && item.show\" :menus = \"item.userList\" :depth = \"depth+4\" @selectItem = \"selectItem\" :actId = \"actId\" @checkItem = \"checkItem\"></Tree>\n    </el-collapse-transition>\n</li>\n",null]}